version: 3

tasks:
  build-loadtester:
    internal: true
    label: "build-loadtester"
    dir: loadtester
    cmds:
      - docker build . -t gql-loadtest
    sources:
      - "*.*"
  loadtest:
    internal: true
    label: "{{.TASK}}-{{.NAME}}"
    cmds:
      - task: build-loadtester
      - docker run -d --name router  --rm  -p 4040:4040 --net=task --env APOLLO_GRAPH_REF="$APOLLO_GRAPH_REF" --env APOLLO_KEY="$APOLLO_KEY" --env COPROCESSOR="http://coprocessor:8000" --mount "type=bind,source=$PWD/{{.ROUTER_CONFIG}},target=/dist/config/router.yaml" --mount "type=bind,source=$PWD/router/supergraph.graphql,target=/dist/config/supergraph.graphql" {{.ROUTER_RUN_OPTIONS}} -m 1g --cpus=1 ghcr.io/apollographql/router:{{.ROUTER_TAG|default "v1.19.0"}} -s /dist/config/supergraph.graphql
      - defer: docker stop router
      - task: warmup-router
        vars:
          NAME: "{{.NAME}}"
      - docker run --name gql-loadtest --rm --net=task --mount="type=bind,source=$PWD/tests,target=/workdir/tests" gql-loadtest --out="tests/{{.TEST_NAME}}/results/results_{{.NAME}}.json" -rate={{.RATE|default 100}} -duration={{.DURATION|default "30s"}}

  warmup-router:
    internal: true
    label: "{{.TASK}}-{{.NAME}}"
    cmds:
      - sleep 5
      - curl -X POST http://127.0.0.1:4040/ --silent -H '@loadtest/headers.txt' -d '@loadtest/queries/Location.json' > /dev/null
      - curl -X POST http://127.0.0.1:4040/ --silent -H '@loadtest/headers.txt' -d '@loadtest/queries/AllLocations.json' > /dev/null
      - sleep 2

  loadtest-coprocessor:
    internal: true
    label: "{{.TASK}}-{{.NAME}}"
    cmds:
      - task: build-coprocessor
        vars:
          NAME: "{{.NAME}}"
      - task: start-coprocessor
        vars:
          NAME: "{{.NAME}}"
      - defer:
          task: cleanup-coprocessor
          vars:
            NAME: "{{.NAME}}"
      - task: loadtest
        vars:
          NAME: "{{.NAME}}"
          ROUTER_CONFIG: tests/{{.TEST_NAME}}/router_co.yaml

  build-coprocessor:
    label: "build-{{.NAME}}"
    dir: coprocessors/{{.NAME}}
    cmds:
      - DOCKER_BUILDKIT=1 docker build . -t {{.NAME}}-co
    vars:
      NAME: "{{.NAME|default .CLI_ARGS}}"
    sources:
      - "*.*"
      - "src/**/*.*"
  start-coprocessor:
    label: "{{.TASK}}-{{.NAME}}"
    dir: coprocessors/{{.NAME}}
    cmds:
      - docker run -d --rm --name coprocessor --net=task --env PORT="8000" -p 8000:8000 -m 1g --cpus=1 {{.NAME}}-co
    vars:
      NAME: "{{.NAME|default .CLI_ARGS}}"
  cleanup-coprocessor:
    label: "{{.TASK}}-{{.NAME}}"
    cmds:
      - docker stop coprocessor
    vars:
      NAME: "{{.NAME|default .CLI_ARGS}}"

  start-subgraphs:
    cmds:
      - task: build-subgraphs
      - docker run --rm -d --name subgraphs --net=task -p 8082:8082 subgraphs
  build-subgraphs:
    dir: subgraphs
    cmds:
      - DOCKER_BUILDKIT=1 docker build . -t subgraphs
    sources:
      - "**/*.*"
  cleanup-subgraphs:
    cmds:
      - docker stop subgraphs

  create-network:
    cmds:
      - docker network create task

  remove-network:
    cmds:
      - docker network rm task
