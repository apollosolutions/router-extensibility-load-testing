schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION) {
  query: Query
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(
  graph: join__Graph
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
  override: String
  usedOverridden: Boolean
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(
  graph: join__Graph!
  interface: String!
) repeatable on OBJECT | INTERFACE

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
  extension: Boolean! = false
  resolvable: Boolean! = true
  isInterfaceObject: Boolean! = false
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(
  graph: join__Graph!
  member: String!
) repeatable on UNION

directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) repeatable on SCHEMA

scalar join__FieldSet

enum join__Graph {
  SUBGRAPH_A
    @join__graph(
      name: "subgraph-a"
      url: "http://host.docker.internal:8081/query"
    )
  SUBGRAPH_B
    @join__graph(
      name: "subgraph-b"
      url: "http://host.docker.internal:8080/query"
    )
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Location
  @join__type(graph: SUBGRAPH_A, key: "id")
  @join__type(graph: SUBGRAPH_B, key: "id") {
  id: ID!

  """
  The calculated overall rating based on all reviews
  """
  overallRating: Float @join__field(graph: SUBGRAPH_A)

  """
  All submitted reviews about this location
  """
  reviewsForLocation: [Review]! @join__field(graph: SUBGRAPH_A)

  """
  The name of the location
  """
  name: String! @join__field(graph: SUBGRAPH_B)

  """
  A short description about the location
  """
  description: String! @join__field(graph: SUBGRAPH_B)

  """
  The location's main photo as a URL
  """
  photo: String! @join__field(graph: SUBGRAPH_B)
}

type Query @join__type(graph: SUBGRAPH_A) @join__type(graph: SUBGRAPH_B) {
  """
  The full list of locations presented by the Interplanetary Space Tourism department
  """
  locations: [Location!]! @join__field(graph: SUBGRAPH_B)

  """
  The details of a specific location
  """
  location(id: ID!): Location @join__field(graph: SUBGRAPH_B)
}

type Review @join__type(graph: SUBGRAPH_A) {
  id: ID!

  """
  Written text
  """
  comment: String

  """
  A number from 1 - 5 with 1 being lowest and 5 being highest
  """
  rating: Int

  """
  The location the review is about
  """
  location: Location
}
