name: Update benchmarks
on:
  workflow_dispatch:

jobs:
  build-images:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.tag }}
    strategy:
      matrix:
        include:
          - context: "coprocessors/csharp"
            tag: "csharp-co"
          - context: "coprocessors/go"
            tag: "go-co"
          - context: "coprocessors/java"
            tag: "java-co"
          - context: "coprocessors/node"
            tag: "node-co"
          - context: "coprocessors/python"
            tag: "python-co"
          - context: subgraphs/fixed
            tag: "fixed"
          - context: loadtester
            tag: "gql-loadtester"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          tags: ${{ matrix.tag }}
          outputs: type=docker,dest=/tmp/${{ matrix.tag }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/${{ matrix.tag }}.tar
  test:
    runs-on: ubuntu-latest
    name: ${{ matrix.test }} Test
    needs: build-images
    strategy:
      matrix:
        include:
          - test: static
            dir: static-subgraph
          - test: guid
            dir: guid-response
          - test: awareness
            dir: jwt-client-awareness
    steps:
      - uses: actions/checkout@v3
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: images
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/*.tar
      - name: Run test
        run: task ${{ matrix.test }}
        env:
          APOLLO_KEY: ${{ secrets.APOLLO_KEY }}
          APOLLO_GRAPH_REF: ${{ secrets.APOLLO_GRAPH_REF }}
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.test }}-results
          path: tests/${{ matrix.dir }}/results
  generate_report:
    name: Generate report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Download static results
        uses: actions/download-artifact@v3
        with:
          name: static-results
          path: tests/static-subgraph/results
      - name: Download guid results
        uses: actions/download-artifact@v3
        with:
          name: guid-results
          path: tests/guid-response/results
      - name: Download awareness results
        uses: actions/download-artifact@v3
        with:
          name: awareness-results
          path: tests/jwt-client-awareness/results
      - name: Generate report
        run: task generate-report
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: results-generator/results.md